{"version":3,"sources":["app/bootstrap-password.coffee","app/lib/jquery.plugin.coffee","app/lib/password_input.coffee"],"names":[],"mappings":"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","file":"public/js/bootstrap-password.js","sourcesContent":["require 'lib/jquery.plugin'","# Reference jQuery\n$ = jQuery\nPasswordInput = require 'lib/password_input'\n\n\n# Adds plugin object to jQuery\n$.fn.extend\n\n  _defaultOptions:\n\n    lang: 'en'\n\n    features: ['background-meter', 'input-group'] # one of 'background-meter', 'input-group', 'toggle-visibility-link'\n\n    'input-group':\n      layout: ['password-strength', 'input', 'toggle-visibility'] # || array of addons and input indicating order ['password-strength', 'input', 'toggle-visibility']\n\n      # define addons here, to be referenced by `layout` array above\n      addons:\n        'toggle-visibility':\n          html: '<span class=\"toggle-visibility icon-toggle-visibility\" aria-hidden=\"true\"></span>'\n        'password-strength':\n          html: '<span class=\"icon-password-strength\" aria-hidden=\"true\"></span>'\n\n    en:\n      meter:\n        veryWeak: 'Very Weak'\n        weak: 'Weak'\n        medium: 'Medium'\n        strong: 'Strong'\n        none: 'Strength'\n      show: 'Show Password'\n      hide: 'Hide Password'\n\n    # calculation can be a function, or users can override the test regexes below\n    calculation:\n      weakTest: /^[a-zA-Z0-9]{6,}$/\n      mediumTest: /^(?=.*\\d)(?=.*[a-z])(?!.*\\s).{8,}$|^(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,}$/\n      strongTest: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,}$/\n\n  bootstrapPassword: (options = {}) ->\n\n    # Below we are going to deep merge. The following are nice to be defaulted, but deep merge is unexpected.\n    #  - input-group layouts\n    #  - features\n    defaultOptions = $.extend true, {}, @_defaultOptions  # never overwrite static defaultOptions, make a copy first\n\n    # If provided, kill default and overwrite.\n    defaultOptions['input-group'].layout = null if options['input-group']?.layout?\n    defaultOptions['features'] = null if options['features']?\n\n    # Merge default options with the provided options.\n    @options = $.extend true, {}, defaultOptions, options\n\n    # _Insert magic here._\n    return @each ()=>\n      # A really lightweight plugin wrapper around the constructor, preventing against multiple instantiations\n      $.data(this, 'bootstrapPassword', new PasswordInput(this, @options))  unless $.data(this, 'bootstrapPassword')\n","class PasswordInput\n\n  constructor: (element, @options) ->\n    @element = $(element)\n    @id = @element.attr('id')\n    @isShown = false\n    @i18n = @options[@options.lang]\n\n    @formGroupElement = @element.parents('.form-group')\n    $.error(\"Form input ##{@id} must have a surrounding form-group.\") unless @formGroupElement.length > 0\n\n    @formGroupElement.addClass('bootstrap-password')\n\n    # layout based on the feature options\n    @layoutInputGroup()\n    @layoutMeter()\n    @layoutToggleVisibilityLink()\n\n    # trigger initial strength update and background-meter underlay placement\n    @onKeyup()\n    @onResize()\n\n    # hookup listeners\n    $(window).resize @onResize\n    @element.keyup(@onKeyup)\n\n    # attach if there is something (this will find inside the form-group allowing for additional triggers)\n    @attachToToggleVisibilityIcon()\n    @attachToToggleVisibilityText()\n\n  layoutToggleVisibilityLink: =>\n    return unless 'toggle-visibility-link' in @options.features\n\n    @toggleVisibilityTextElement = $(\"<a href='#' class='toggle-visibility'>#{@i18n.show}</a>\")\n    @formGroupElement.append @toggleVisibilityTextElement\n\n\n  layoutInputGroup: =>\n    return unless 'input-group' in @options.features\n\n    # find existing input-group\n    @inputGroupElement = @element.parents('.input-group')\n\n    # create input-group\n    if @inputGroupElement.length <= 0\n      @inputGroupElement = $('<div class=\"input-group\"></div>')\n      @element.wrap @inputGroupElement\n\n    reachedInput = false\n    for addonKey in @options['input-group'].layout\n      if addonKey is 'input'\n        reachedInput = true\n        continue\n\n      addon = @options['input-group'].addons[addonKey]\n      addonElement =\n        $(\"\"\"\n              <div class=\"input-group-addon\">\n                  #{addon.html}\n              </div>\n              \"\"\")\n      if reachedInput\n        @element.after addonElement\n      else\n        @element.before addonElement\n\n  attachToToggleVisibilityText: =>\n    @toggleVisibilityTextElement = @formGroupElement.find('a.toggle-visibility') # have to use the finder because the @inputGroupElement is a wrapper and find doesn't appear to work. jquery bug?\n    @toggleVisibilityTextElement = null if @toggleVisibilityTextElement.length <= 0\n    # events to trigger show/hide for password field\n    @toggleVisibilityTextElement?.click(@onToggleVisibility)\n\n\n  attachToToggleVisibilityIcon: =>\n    @toggleVisibilityIconElement = @formGroupElement.find('.input-group').find('span.toggle-visibility') # have to use the finder because the @inputGroupElement is a wrapper and find doesn't appear to work. jquery bug?\n    @toggleVisibilityIconElement = null if @toggleVisibilityIconElement.length <= 0\n    # events to trigger show/hide for password field\n    @toggleVisibilityIconElement?.click(@onToggleVisibility)\n\n  layoutMeter: =>\n\n    if 'background-meter' in @options.features\n      @formGroupElement.addClass('background-metered')\n      @backgroundMeterElement = $(\"<div class='background-meter' />\")\n      @formGroupElement.append @backgroundMeterElement\n\n      meterGroupElement = @backgroundMeterElement\n\n\n    # create strength meter outer div and inner label.  Looks like:\n    #    <div class=\"meter\">\n    #      <div class=\"none\">Strength</div>\n    #    </div>\n    unless meterGroupElement\n      meterGroupElement = $(\"<div class='meter-group'/>\")\n      @element.after meterGroupElement\n\n    @meterElement = $(\"<div class='meter'>\")\n    @meterLabelElement = $(\"<div>#{@i18n.meter.none}</div>\")\n    @meterLabelElement.appendTo @meterElement\n    meterGroupElement.append @meterElement\n\n  onResize: =>\n    # resetBackgroundMeterCss - now that position and everything is calculated, grab the css from the input and add it to our backgroundMeterElement\n    return unless @backgroundMeterElement?\n\n    backgroundMeterCss =\n      position: 'absolute'\n      verticalAlign: @element.css('verticalAlign')\n      width: @element.css('width')\n      height: @element.css('height')\n      borderRadius: @element.css('borderRadius')\n      'z-index': -1\n\n    @backgroundMeterElement.css(backgroundMeterCss)\n    @backgroundMeterElement.offset(@element.offset())\n\n  onToggleVisibility: (ev) =>\n    ev.preventDefault()\n\n    if @isShown\n      @element.attr('type', 'password')\n      @toggleVisibilityIconElement.removeClass('hide-toggle-visibility').addClass('toggle-visibility') if @toggleVisibilityIconElement\n      @toggleVisibilityTextElement.removeClass('hide-toggle-visibility').addClass('toggle-visibility').html @i18n.show if @toggleVisibilityTextElement\n      @isShown = false\n    else\n      @element.attr('type', 'text')\n      @toggleVisibilityIconElement.removeClass('toggle-visibility').addClass('hide-toggle-visibility') if @toggleVisibilityIconElement\n      @toggleVisibilityTextElement.removeClass('toggle-visibility').addClass('hide-toggle-visibility').html @i18n.hide if @toggleVisibilityTextElement\n      @isShown = true\n\n  onKeyup: (ev) =>\n    # events to trigger strength meter and update the hidden field\n    strength = @calculateStrength(@element.val())\n    @updateUI strength\n\n  updateUI: (strength) =>\n    for cssClass in ['strong', 'medium', 'weak', 'veryWeak', 'none']\n      @formGroupElement.removeClass(cssClass)\n\n    @formGroupElement.addClass(strength)\n\n    switch strength\n      when 'strong', 'medium', 'weak', 'none'\n        @meterLabelElement.text(@i18n.meter[strength])\n      else\n        @meterLabelElement.text @i18n.meter.veryWeak\n\n  calculateStrength: (newValue) =>\n    #\n    # Check the password against the calculation. Allow someone to pass in a different `calculation` fn via options.\n    #   Any given function should return strength string values of strength|veryweak|weak|strong\n    #\n    if typeof @options.calculation is 'function'\n      calculation = @options.calculation\n    else\n      calculation = @defaultCalculation\n\n    calculation(newValue)\n\n  defaultCalculation: (newValue) =>\n    # check the password against the regexes given in the options (defaulted as well)\n    if newValue.length is 0\n      'none'\n    else if newValue.search(@options.calculation.strongTest) >= 0\n      'strong'\n    else if newValue.search(@options.calculation.mediumTest) >= 0\n      'medium'\n    else if newValue.search(@options.calculation.weakTest) >= 0\n      'weak'\n    else\n      'veryWeak'\n\nmodule.exports = PasswordInput"]}