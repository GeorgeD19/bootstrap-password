{"version":3,"sources":["app/bootstrap-password.coffee","app/lib/jquery.plugin.coffee","app/lib/password_input.coffee"],"names":[],"mappings":"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","file":"public/js/bootstrap-password.js","sourcesContent":["require 'lib/jquery.plugin'","# Reference jQuery\n$ = jQuery\nPasswordInput = require 'lib/password_input'\n\n\n# Adds plugin object to jQuery\n$.fn.extend\n\n  _defaultOptions:\n\n    lang: 'en'\n\n    features: ['background-meter', 'input-group'] # one of 'background-meter', 'input-group', 'toggle-visibility-link'\n\n    'input-group':\n      layout: ['password-strength', 'input', 'toggle-visibility'] # || array of addons and input indicating order ['password-strength', 'input', 'toggle-visibility']\n\n      # define addons here, to be referenced by `layout` array above\n      addons:\n        'toggle-visibility':\n          html: '<span class=\"toggle-visibility icon-toggle-visibility\" aria-hidden=\"true\"></span>'\n        'password-strength':\n          html: '<span class=\"icon-password-strength\" aria-hidden=\"true\"></span>'\n\n    en:\n      meter:\n        veryWeak: 'Very Weak'\n        weak: 'Weak'\n        medium: 'Medium'\n        strong: 'Strong'\n        none: 'Strength'\n      show: 'Show'\n      hide: 'Hide'\n\n    # calculation can be a function (#calculation(newValue, options)), or users can override the test regexes below\n    calculation:\n      weakTest: /^[a-zA-Z0-9]{6,}$/\n      mediumTest: /^(?=.*\\d)(?=.*[a-z])(?!.*\\s).{8,}$|^(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,}$/\n      strongTest: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,}$/\n\n  bootstrapPassword: (options = {}) ->\n\n    # Below we are going to deep merge. The following are nice to be defaulted, but deep merge is unexpected.\n    #  - input-group layouts\n    #  - features\n    defaultOptions = $.extend true, {}, @_defaultOptions  # never overwrite static defaultOptions, make a copy first\n\n    # If provided, kill default and overwrite.\n    defaultOptions['input-group'].layout = null if options['input-group']?.layout?\n    defaultOptions['features'] = null if options['features']?\n\n    # Merge default options with the provided options.\n    @options = $.extend true, {}, defaultOptions, options\n\n    # _Insert magic here._\n    return @each ()=>\n      # A really lightweight plugin wrapper around the constructor, preventing against multiple instantiations\n      $.data(this, 'bootstrapPassword', new PasswordInput(this, @options))  unless $.data(this, 'bootstrapPassword')\n","class PasswordInput\n\n  constructor: (element, @options) ->\n    @element = $(element)\n    @id = @element.attr('id')\n    @isShown = false\n    @i18n = @options[@options.lang]\n    @formGroupElement = @element.parents('.form-group')\n    $.error(\"Form input ##{@id} must have a surrounding form-group.\") unless @formGroupElement.length > 0\n    @formGroupElement.addClass('bootstrap-password')\n\n    # layout based on the feature options\n    @layoutInputGroup()\n    @layoutMeter()\n    @layoutToggleVisibilityLink()\n\n    # trigger initial strength update and background-meter underlay placement\n    @onKeyup()\n    @setBackgroundMeterPosition()\n\n    # hookup listeners\n    $(window).resize @setBackgroundMeterPosition\n    @element.keyup(@onKeyup)\n\n    # attach if there is something (this will find inside the form-group allowing for additional triggers)\n    @attachToToggleVisibilityIcon()\n    @attachToToggleVisibilityText()\n\n    # see if we belong to a modal\n    @modal = @element.closest('.modal')\n    @modal = null if @modal.length is 0 # for easy comparison\n\n    # hookup modal listeners to properly position the underlay\n    if @modal\n      @hideBackgroundMeter() # initial hide\n      @modal.on('shown.bs.modal', @setBackgroundMeterPosition)\n      @modal.on('hidden.bs.modal', @hideBackgroundMeter)\n\n\n  layoutToggleVisibilityLink: =>\n    return unless 'toggle-visibility-link' in @options.features\n\n    @toggleVisibilityTextElement = $(\"<a href='#' class='toggle-visibility'>#{@i18n.show}</a>\")\n    @formGroupElement.append @toggleVisibilityTextElement\n\n\n  layoutInputGroup: =>\n    return unless 'input-group' in @options.features\n\n    # find existing input-group\n    @inputGroupElement = @element.parents('.input-group')\n\n    # create input-group\n    if @inputGroupElement.length <= 0\n      @inputGroupElement = $('<div class=\"input-group\"></div>')\n      @element.wrap @inputGroupElement\n\n    reachedInput = false\n    for addonKey in @options['input-group'].layout\n      if addonKey is 'input'\n        reachedInput = true\n        continue\n\n      addon = @options['input-group'].addons[addonKey]\n      addonElement =\n        $(\"\"\"\n              <div class=\"input-group-addon\">\n                  #{addon.html}\n              </div>\n              \"\"\")\n      if reachedInput\n        @element.after addonElement\n      else\n        @element.before addonElement\n\n  attachToToggleVisibilityText: =>\n    @toggleVisibilityTextElement = @formGroupElement.find('a.toggle-visibility') # have to use the finder because the @inputGroupElement is a wrapper and find doesn't appear to work. jquery bug?\n    @toggleVisibilityTextElement = null if @toggleVisibilityTextElement.length <= 0\n    # events to trigger show/hide for password field\n    @toggleVisibilityTextElement?.click(@onToggleVisibility)\n\n\n  attachToToggleVisibilityIcon: =>\n    @toggleVisibilityIconElement = @formGroupElement.find('.input-group').find('span.toggle-visibility') # have to use the finder because the @inputGroupElement is a wrapper and find doesn't appear to work. jquery bug?\n    @toggleVisibilityIconElement = null if @toggleVisibilityIconElement.length <= 0\n    # events to trigger show/hide for password field\n    @toggleVisibilityIconElement?.click(@onToggleVisibility)\n\n  layoutMeter: =>\n\n    if 'background-meter' in @options.features\n      @formGroupElement.addClass('background-metered')\n      @backgroundMeterElement = $(\"<div class='background-meter' />\")\n      @formGroupElement.append @backgroundMeterElement\n      #@formGroupElement.find('.input-group').append @backgroundMeterElement # doesn't change modal issue\n\n      meterGroupElement = @backgroundMeterElement\n\n\n    # create strength meter outer div and inner label.  Looks like:\n    #    <div class=\"meter\">\n    #      <div class=\"none\">Strength</div>\n    #    </div>\n    unless meterGroupElement\n      meterGroupElement = $(\"<div class='meter-group'/>\")\n      @element.after meterGroupElement\n\n    @meterElement = $(\"<div class='meter'>\")\n    @meterLabelElement = $(\"<div>#{@i18n.meter.none}</div>\")\n    @meterLabelElement.appendTo @meterElement\n    meterGroupElement.append @meterElement\n\n  hideBackgroundMeter: =>\n    # make sure there is no visual artifacting when a modal is hidden then shown again\n    return unless @backgroundMeterElement?\n    @meterElement.addClass('hidden')\n\n  setBackgroundMeterPosition: =>\n    # resetBackgroundMeterCss - now that position and everything is calculated, grab the css from the input and add it to our backgroundMeterElement\n    return unless @backgroundMeterElement?\n\n#    console.debug \"background-meter z-index: #{@baseZindex + 1}\"\n#    console.debug \"background-meter location set to: \", @element.offset()\n    backgroundMeterCss =\n      position: 'absolute'\n      verticalAlign: @element.css('verticalAlign')\n      width: @element.css('width')\n      height: @element.css('height')\n      borderRadius: @element.css('borderRadius')\n\n    @backgroundMeterElement.css(backgroundMeterCss)\n    @backgroundMeterElement.offset(@element.offset())\n    @meterElement.removeClass('hidden')\n\n  onToggleVisibility: (ev) =>\n    ev.preventDefault()\n\n    if @isShown\n      @element.attr('type', 'password')\n      @toggleVisibilityIconElement.removeClass('hide-toggle-visibility').addClass('toggle-visibility') if @toggleVisibilityIconElement\n      @toggleVisibilityTextElement.removeClass('hide-toggle-visibility').addClass('toggle-visibility').html @i18n.show if @toggleVisibilityTextElement\n      @isShown = false\n    else\n      @element.attr('type', 'text')\n      @toggleVisibilityIconElement.removeClass('toggle-visibility').addClass('hide-toggle-visibility') if @toggleVisibilityIconElement\n      @toggleVisibilityTextElement.removeClass('toggle-visibility').addClass('hide-toggle-visibility').html @i18n.hide if @toggleVisibilityTextElement\n      @isShown = true\n\n  onKeyup: (ev) =>\n    # events to trigger strength meter and update the hidden field\n    strength = @calculateStrength(@element.val())\n    @updateUI strength\n\n  updateUI: (strength) =>\n    for cssClass in ['strong', 'medium', 'weak', 'veryWeak', 'none']\n      @formGroupElement.removeClass(cssClass)\n\n    @formGroupElement.addClass(strength)\n\n    switch strength\n      when 'strong', 'medium', 'weak', 'none'\n        @meterLabelElement.text(@i18n.meter[strength])\n      else\n        @meterLabelElement.text @i18n.meter.veryWeak\n\n  calculateStrength: (newValue) =>\n    #\n    # Check the password against the calculation. Allow someone to pass in a different `calculation` fn via options.\n    #   Any given function should return strength string values of strength|veryweak|weak|strong\n    #\n    if typeof @options.calculation is 'function'\n      calculation = @options.calculation\n    else\n      calculation = @defaultCalculation\n\n    calculation(newValue, @options)\n\n  defaultCalculation: (newValue, options) =>\n    # check the password against the regexes given in the options (defaulted as well)\n    if newValue.length is 0\n      'none'\n    else if newValue.search(options.calculation.strongTest) >= 0\n      'strong'\n    else if newValue.search(options.calculation.mediumTest) >= 0\n      'medium'\n    else if newValue.search(options.calculation.weakTest) >= 0\n      'weak'\n    else\n      'veryWeak'\n\nmodule.exports = PasswordInput"]}